<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shuren.mapper.SupplierStaffMapper" >
  <resultMap id="BaseResultMap" type="com.shuren.pojo.SupplierStaff" >
    <id column="supplierstaffid" property="supplierstaffid" jdbcType="INTEGER" />
    <result column="supplierid" property="supplierid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="function" property="function" jdbcType="INTEGER" />
    <result column="explain" property="explain" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    supplierstaffid, supplierid, name, email, tel, function, explain
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from supplierstaff
    where supplierstaffid = #{supplierstaffid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from supplierstaff
    where supplierstaffid = #{supplierstaffid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shuren.pojo.SupplierStaff" >
    insert into supplierstaff (supplierstaffid, supplierid, name, 
      email, tel, function, 
      explain)
    values (#{supplierstaffid,jdbcType=INTEGER}, #{supplierid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{function,jdbcType=INTEGER}, 
      #{explain,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shuren.pojo.SupplierStaff" >
    insert into supplierstaff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="supplierstaffid != null" >
        supplierstaffid,
      </if>
      <if test="supplierid != null" >
        supplierid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="function != null" >
        function,
      </if>
      <if test="explain != null" >
        explain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="supplierstaffid != null" >
        #{supplierstaffid,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null" >
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="function != null" >
        #{function,jdbcType=INTEGER},
      </if>
      <if test="explain != null" >
        #{explain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shuren.pojo.SupplierStaff" >
    update supplierstaff
    <set >
      <if test="supplierid != null" >
        supplierid = #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="function != null" >
        function = #{function,jdbcType=INTEGER},
      </if>
      <if test="explain != null" >
        explain = #{explain,jdbcType=VARCHAR},
      </if>
    </set>
    where supplierstaffid = #{supplierstaffid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shuren.pojo.SupplierStaff" >
    update supplierstaff
    set supplierid = #{supplierid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      function = #{function,jdbcType=INTEGER},
      explain = #{explain,jdbcType=VARCHAR}
    where supplierstaffid = #{supplierstaffid,jdbcType=INTEGER}
  </update>
</mapper>